provide akra.system;

struct VS_OUT {
    float3 tex:TEXCOORD0;
    float4 pos:POSITION;
};

float4x4 model_mat:MODELMATRIX;
float4x4 view_mat:VIEWMATRIX;
float4x4 proj_mat:PROJMATRIX;

VS_OUT vs_main_2(float3 pos:POSITION){
    VS_OUT Out;
    float4 pos_temp = model_mat * float4(pos, 1.);
    Out.tex = pos_temp.xyz;
    Out.pos = proj_mat * view_mat * pos_temp;
    return Out;
}

float4 fs_main_2(VS_OUT IN) : COLOR {
    float x = IN.tex.x;
    float z = IN.tex.z;
    float4 color;
    //if(x == 0. && z == 0.){
//        return float4(1.0,0.0,0.0,0.0);
    //}

    if (abs(x) == 0.){
        color = float4(0., 0., 1., 1.);
    }
    else if(abs(z) == 0.){
        color = float4(1., 0., 0., 1.);
    }
    else {
        color = float4(0.6, 0.6, 0.6, 1.);
        if ((fract(z) == 0.) && mod(z, 5.) == 0.){
            color = float4(0.35, 0.35, 0.35, 1.);
        }
        else if ((fract(x) == 0.) && mod(x, 5.) == 0.){
            color = float4(0.35, 0.35, 0.35, 1.);
        }
    }
    return color;
}

technique plane{
    pass p0 {
        VertexShader = compile vs_main_2();
        PixelShader = compile fs_main_2();
    }
}